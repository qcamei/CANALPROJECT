package com.cqupt.canalManage.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts2.ServletActionContext;

import com.cqupt.pub.dao.DataStormSession;
import com.cqupt.pub.util.JsonUtil;
import com.opensymphony.xwork2.ActionSupport;

public class AgentManagerQueryAction extends ActionSupport {
	Logger logger = Logger.getLogger(getClass());
	private static final long serialVersionUID = -2465087541585226388L;
	/**
	 * 查询本代理商信息
	 */
	HttpServletRequest request = null;

	public String execute() {
		request = ServletActionContext.getRequest();
		HttpSession session = request.getSession();

		String pageSize = request.getParameter("pagesize");
		String page = request.getParameter("page");

		HttpServletResponse response = ServletActionContext.getResponse();
		// 设置字符集
		response.setCharacterEncoding("UTF-8");
		PrintWriter out;
		try {
			out = response.getWriter();
			// 直接输入响应的内容
			out.println(getAgentList(pageSize, page));
			out.flush();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}

		return null;// 不需要跳转某个视图 因为上面已经有了直接输出的响应结果

	}

	private char[] getAgentList(String pageSize, String page) {
		String sql = "";
		String resultStr = "";
		Map result = null;

		String agentCode = "";
		String inId = "";
		String areaName = "";
		String agentState = "";
		String branchCompany = "";
		try {
			agentCode = java.net.URLDecoder.decode(
					request.getParameter("agentCode"), "UTF-8");
			agentState = java.net.URLDecoder.decode(
					request.getParameter("agentState"), "UTF-8");
			areaName = java.net.URLDecoder.decode(
					request.getParameter("areaName"), "UTF-8");
			inId = java.net.URLDecoder.decode(request.getParameter("inId"),
					"UTF-8");
			branchCompany = java.net.URLDecoder.decode(
					request.getParameter("branchCompany"), "UTF-8");
		} catch (Exception e1) {

		}

		sql = "select b.* , ROWNUM order_id FROM (select @rownum:=@rownum+1 as rownum, t.in_id , t.branch_company , t.area_name , t.agent_id , t.agent_name, t.agent_short_name, t.agent_state, t.agent_dept, t.agent_level, t.company_type, t.cooperation_type, t.legal_person, t.legal_phone, t.legal_card_type, t.legal_id_card, t.manage_model, t.is_11888_card, t.onduty_person, t.onduty_person_phone, t.start_bank, t.bank_accountId, t.parent_id, t.parent_name, t.company_address, t.onduty_person_address, t.onduty_person_qqnum, t.post_code, t.agent_fax, t.agent_email, t.pay_way, t.bank_account_name, t.weituo_start_bank, t.weituo_bank_account, t.weituo_bank_name, t.pay_object, t.register_money, date_format(t.register_date, '%Y-%c-%d %H:%i:%s') register_date, t.business_license_id, t.tax_registe_id, t.bank_permision_id, t.organization_code_id, t.oper_user, t.dept_name, date_format(t.oper_time, '%Y-%c-%d %H:%i:%s') oper_time, t.remark "
				+ " from (select @rownum:=0) r, qdzc.agent_information t WHERE 1=1";

		if (agentCode != null && !agentCode.equals("")) {
			sql += " and t.agent_id like '%" + agentCode + "%'";
		}
		if (inId != null && !inId.equals("")) {
			sql += " and t.in_id like '%" + inId + "%'";
		}
		if (agentState != null && !agentState.equals("")) {
			sql += " and t.agent_state like '%" + agentState + "%'";
		}
		if (areaName != null && !areaName.equals("")) {
			sql += " and t.area_name like '%" + areaName + "%'";
		}
		if (branchCompany != null && !branchCompany.equals("")) {
			sql += " and t.branch_company like '%" + branchCompany + "%'";
		}

		sql += ")b";

		logger.info("资产List：" + sql);

		try {
			DataStormSession session = DataStormSession.getInstance();
			result = session.findSql(sql, Integer.parseInt(page),
					Integer.parseInt(pageSize));
			resultStr = JsonUtil.map2json(result);
			logger.info("Json:" + resultStr);

		} catch (Exception e) {
			e.printStackTrace();
		}

		return resultStr.toCharArray();
	}
}
